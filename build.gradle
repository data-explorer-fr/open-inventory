plugins {
    id 'java'
}

description = """ 
Small inventory program, using an embedded javascript engine.
"""

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    implementation 'com.github.oshi:oshi-core-shaded:5.3.7'
    implementation 'com.github.oshi:oshi-core:5.3.7'
    implementation 'org.mozilla:rhino:1.7.7.2' 
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.0'
}

configurations {
    resolvableImplementation.extendsFrom implementation
}

sourceSets {
    main.java.srcDirs += 'src'
    main.resources.srcDirs += 'src'
    test.java.srcDirs += 'test'
    test.resources.srcDirs += 'test'
}

// Java target version
sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    manifest {
        attributes(
                'Main-Class': 'openinventory.Shell'
        )
    }
}

// creates a fat jar with all the dependencies bundled
task fatJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE 
    manifest {
        attributes 'Main-Class': 'openinventory.Shell'
    }
    archiveClassifier = "all"
    from {
        configurations.resolvableImplementation.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}


test {
    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}
